{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"debug-build.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/debug-build.ts"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n"],"names":[],"mappings":"AAEA;;;;CAIA;;;AACO,MAAM,WAAY,GAAE,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"file":"base.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/transports/base.ts"],"sourcesContent":["import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"file":"carrier.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/carrier.ts"],"sourcesContent":["import type { Client, Integration, MetricsAggregator, Scope } from '@sentry/types';\nimport { GLOBAL_OBJ, SDK_VERSION } from '@sentry/utils';\nimport type { AsyncContextStack } from './asyncContext/stackStrategy';\nimport type { AsyncContextStrategy } from './asyncContext/types';\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: VersionedCarrier;\n}\n\ntype VersionedCarrier = {\n  version?: string;\n} & Record<Exclude<string, 'version'>, SentryCarrier>;\n\ninterface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  stack?: AsyncContextStack;\n\n  globalScope?: Scope;\n  defaultIsolationScope?: Scope;\n  defaultCurrentScope?: Scope;\n  globalMetricsAggregators?: WeakMap<Client, MetricsAggregator> | undefined;\n\n  // TODO(v9): Remove these properties - they are no longer used and were left over in v8\n  integrations?: Integration[];\n  extensions?: {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    [key: string]: Function;\n  };\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[SDK_VERSION] = __SENTRY__[SDK_VERSION] || {});\n}\n"],"names":[],"mappings":";;;;;;;AAKA;;;CAGA,GA0BA;;;;;;EAMA,GACO,SAAS,cAAc,GAAY;IAC1C,uCAAA;IACE,gBAAgB,mKAAC,aAAU,CAAC;IAC5B,yKAAO,aAAU;AACnB;AAEA,sEAAA,GACO,SAAS,gBAAgB,CAAC,OAAO,EAA0B;IAChE,MAAM,UAAA,GAAc,OAAO,CAAC,UAAA,GAAa,OAAO,CAAC,UAAA,IAAc,CAAA,CAAE,CAAC;IAEpE,0DAAA;IACE,UAAU,CAAC,OAAQ,GAAE,UAAU,CAAC,OAAA,oKAAW,cAAW;IAExD,4EAAA;IACA,gFAAA;IACE,OAAQ,UAAU,iKAAC,cAAW,CAAE,GAAE,UAAU,iKAAC,cAAW,CAAA,IAAK,CAAA,CAAE;AACjE","ignoreList":[0]}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"file":"spanOnScope.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/spanOnScope.ts"],"sourcesContent":["import type { Scope, Span } from '@sentry/types';\nimport { addNonEnumerableProperty } from '@sentry/utils';\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\ntype ScopeWithMaybeSpan = Scope & {\n  [SCOPE_SPAN_FIELD]?: Span;\n};\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _setSpanForScope(scope: Scope, span: Span | undefined): void {\n  if (span) {\n    addNonEnumerableProperty(scope as ScopeWithMaybeSpan, SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope as ScopeWithMaybeSpan)[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nexport function _getSpanForScope(scope: ScopeWithMaybeSpan): Span | undefined {\n  return scope[SCOPE_SPAN_FIELD];\n}\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,gBAAA,GAAmB,aAAa;AAMtC;;;CAGA,GACO,SAAS,gBAAgB,CAAC,KAAK,EAAS,IAAI,EAA0B;IAC3E,IAAI,IAAI,EAAE;2KACR,2BAAA,AAAwB,EAAC,KAAA,EAA6B,gBAAgB,EAAE,IAAI,CAAC;IACjF,OAAS;QACT,gEAAA;QACI,OAAO,AAAC,KAAA,CAA6B,gBAAgB,CAAC;IAC1D;AACA;AAEA;;;CAGA,GACO,SAAS,gBAAgB,CAAC,KAAK,EAAwC;IAC5E,OAAO,KAAK,CAAC,gBAAgB,CAAC;AAChC","ignoreList":[0]}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"file":"session.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/session.ts"],"sourcesContent":["import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"file":"scope.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/scope.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  SeverityLevel,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, generatePropagationContext, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { updateSession } from './session';\nimport { _getSpanForScope, _setSpanForScope } from './utils/spanOnScope';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information.\n */\nclass ScopeClass implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called during event processing. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: SeverityLevel;\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n  protected _transactionName?: string;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  /** Contains the last event id of a captured event.  */\n  protected _lastEventId?: string;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clone(): ScopeClass {\n    const newScope = new ScopeClass();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    _setSpanForScope(newScope, _getSpanForScope(this));\n\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLastEventId(lastEventId: string | undefined): void {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this._client as C | undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: SeverityLevel): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const [scopeInstance, requestSession] =\n      scopeToMerge instanceof Scope\n        ? [scopeToMerge.getScopeData(), scopeToMerge.getRequestSession()]\n        : isPlainObject(scopeToMerge)\n          ? [captureContext as ScopeContext, (captureContext as ScopeContext).requestSession]\n          : [];\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    if (requestSession) {\n      this._requestSession = requestSession;\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._session = undefined;\n    _setSpanForScope(this, undefined);\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: _getSpanForScope(this),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n// NOTE: By exporting this here as const & type, instead of doing `export class`,\n// We can get the correct class when importing from `@sentry/core`, but the original type (from `@sentry/types`)\n// This is helpful for interop, e.g. when doing `import type { Scope } from '@sentry/node';` (which re-exports this)\n\n/**\n * Holds additional event information.\n */\nexport const Scope = ScopeClass;\n\n/**\n * Holds additional event information.\n */\nexport type Scope = ScopeInterface;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"file":"defaultScopes.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/defaultScopes.ts"],"sourcesContent":["import type { Scope } from '@sentry/types';\nimport { getGlobalSingleton } from '@sentry/utils';\nimport { Scope as ScopeClass } from './scope';\n\n/** Get the default current scope. */\nexport function getDefaultCurrentScope(): Scope {\n  return getGlobalSingleton('defaultCurrentScope', () => new ScopeClass());\n}\n\n/** Get the default isolation scope. */\nexport function getDefaultIsolationScope(): Scope {\n  return getGlobalSingleton('defaultIsolationScope', () => new ScopeClass());\n}\n"],"names":["ScopeClass"],"mappings":";;;;;;;;AAIA,mCAAA,GACO,SAAS,sBAAsB,GAAU;IAC9C,6KAAO,qBAAA,AAAkB,EAAC,qBAAqB,EAAE,IAAM,iKAAIA,QAAU,EAAE,CAAC;AAC1E;AAEA,qCAAA,GACO,SAAS,wBAAwB,GAAU;IAChD,6KAAO,qBAAA,AAAkB,EAAC,uBAAuB,EAAE,IAAM,iKAAIA,QAAU,EAAE,CAAC;AAC5E","ignoreList":[0]}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"file":"stackStrategy.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/asyncContext/stackStrategy.ts"],"sourcesContent":["import type { Client, Scope as ScopeInterface } from '@sentry/types';\nimport { isThenable } from '@sentry/utils';\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from '../defaultScopes';\nimport { Scope } from '../scope';\n\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport type { AsyncContextStrategy } from './types';\n\ninterface Layer {\n  client?: Client;\n  scope: ScopeInterface;\n}\n\n/**\n * This is an object that holds a stack of scopes.\n */\nexport class AsyncContextStack {\n  private readonly _stack: [Layer, ...Layer[]];\n  private _isolationScope: ScopeInterface;\n\n  public constructor(scope?: ScopeInterface, isolationScope?: ScopeInterface) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    // scope stack for domains or the process\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n  public withScope<T>(callback: (scope: ScopeInterface) => T): T {\n    const scope = this._pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n  public getScope(): ScopeInterface {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n  public getIsolationScope(): ScopeInterface {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1] as Layer;\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n  private _pushScope(): ScopeInterface {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this._stack.push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n  private _popScope(): boolean {\n    if (this._stack.length <= 1) return false;\n    return !!this._stack.pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack(): AsyncContextStack {\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope()));\n}\n\nfunction withScope<T>(callback: (scope: ScopeInterface) => T): T {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope<T>(scope: ScopeInterface, callback: (scope: ScopeInterface) => T): T {\n  const stack = getAsyncContextStack() as AsyncContextStack;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope<T>(callback: (isolationScope: ScopeInterface) => T): T {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: <T>(_isolationScope: ScopeInterface, callback: (isolationScope: ScopeInterface) => T) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/asyncContext/index.ts"],"sourcesContent":["import type { Carrier } from './../carrier';\nimport { getMainCarrier, getSentryCarrier } from './../carrier';\nimport { getStackAsyncContextStrategy } from './stackStrategy';\nimport type { AsyncContextStrategy } from './types';\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  const sentry = getSentryCarrier(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\n  const sentry = getSentryCarrier(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return getStackAsyncContextStrategy();\n}\n"],"names":[],"mappings":";;;;;;;;AAKA;;;;CAIA,GACO,SAAS,uBAAuB,CAAC,QAAQ,EAA0C;IAC1F,kDAAA;IACE,MAAM,QAAA,sKAAW,iBAAA,AAAc,EAAE;IACjC,MAAM,MAAO,IAAE,qLAAA,AAAgB,EAAC,QAAQ,CAAC;IACzC,MAAM,CAAC,GAAI,GAAE,QAAQ;AACvB;AAEA;;;CAGA,GACO,SAAS,uBAAuB,CAAC,OAAO,EAAiC;IAC9E,MAAM,MAAO,sKAAE,mBAAA,AAAgB,EAAC,OAAO,CAAC;IAExC,IAAI,MAAM,CAAC,GAAG,EAAE;QACd,OAAO,MAAM,CAAC,GAAG;IACrB;IAEA,yCAAA;IACE,gMAAO,+BAAA,AAA4B,EAAE;AACvC","ignoreList":[0]}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"file":"currentScopes.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/currentScopes.ts"],"sourcesContent":["import type { Scope } from '@sentry/types';\nimport type { Client } from '@sentry/types';\nimport { getGlobalSingleton } from '@sentry/utils';\nimport { getAsyncContextStrategy } from './asyncContext';\nimport { getMainCarrier } from './carrier';\nimport { Scope as ScopeClass } from './scope';\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current execution context.\n */\nexport function getIsolationScope(): Scope {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): Scope {\n  return getGlobalSingleton('globalScope', () => new ScopeClass());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: Scope | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: Scope | undefined, callback: (scope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n/**\n * Set the provided isolation scope as active in the given callback. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * If you pass in `undefined` as a scope, it will fork a new isolation scope, the same as if no scope is passed.\n */\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nexport function withIsolationScope<T>(\n  ...rest:\n    | [callback: (isolationScope: Scope) => T]\n    | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n): T {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  return getCurrentScope().getClient<C>();\n}\n"],"names":["ScopeClass"],"mappings":";;;;;;;;;;;;;;;;AAOA;;CAEA,GACO,SAAS,eAAe,GAAU;IACvC,MAAM,OAAA,sKAAU,iBAAA,AAAc,EAAE;IAChC,MAAM,GAAI,mLAAE,2BAAA,AAAuB,EAAC,OAAO,CAAC;IAC5C,OAAO,GAAG,CAAC,eAAe,EAAE;AAC9B;AAEA;;;CAGA,GACO,SAAS,iBAAiB,GAAU;IACzC,MAAM,OAAA,OAAU,gLAAA,AAAc,EAAE;IAChC,MAAM,GAAI,oLAAE,0BAAA,AAAuB,EAAC,OAAO,CAAC;IAC5C,OAAO,GAAG,CAAC,iBAAiB,EAAE;AAChC;AAEA;;;CAGA,GACO,SAAS,cAAc,GAAU;IACtC,QAAO,0LAAA,AAAkB,EAAC,aAAa,EAAE,IAAM,iKAAIA,QAAU,EAAE,CAAC;AAClE;AAEA;;;;CAIA,GAMA;;CAEA,GACO,SAAS,SAAS,CACvB,GAAG,IAAA;IAEH,MAAM,OAAA,IAAU,mLAAA,AAAc,EAAE;IAChC,MAAM,GAAI,oLAAE,0BAAA,AAAuB,EAAC,OAAO,CAAC;IAE9C,0FAAA;IACE,IAAI,IAAI,CAAC,MAAO,KAAI,CAAC,EAAE;QACrB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAA,GAAI,IAAI;QAE9B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QACpC;QAEI,OAAO,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC;IAC5C;IAEE,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B;AAEA;;;;;;;;;CASA,GAeA;;CAEA,GACO,SAAS,kBAAkB,CAChC,GAAG,IAAA;IAIH,MAAM,OAAA,sKAAU,iBAAA,AAAc,EAAE;IAChC,MAAM,GAAI,oLAAE,0BAAA,AAAuB,EAAC,OAAO,CAAC;IAE9C,0FAAA;IACE,IAAI,IAAI,CAAC,MAAO,KAAI,CAAC,EAAE;QACrB,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAA,GAAI,IAAI;QAEvC,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAC7C;QAEI,OAAO,GAAG,CAAC,qBAAqB,CAAC,cAAc,EAAE,QAAQ,CAAC;IAC9D;IAEE,OAAO,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC;AAEA;;CAEA,GACO,SAAS,SAAS,GAAoC;IAC3D,OAAO,eAAe,EAAE,CAAC,SAAS,EAAK;AACzC","ignoreList":[0]}},
    {"offset": {"line": 1086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"file":"integration.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/integration.ts"],"sourcesContent":["import type { Client, Event, EventHint, Integration, IntegrationFn, Options } from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\nimport { getClient } from './currentScopes';\n\nimport { DEBUG_BUILD } from './debug-build';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preserve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex > -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1) as [Integration];\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => Integration {\n  return fn;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1233, "column": 0}, "map": {"version":3,"file":"inboundfilters.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/integrations/inboundfilters.ts"],"sourcesContent":["import type { Event, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event: Event): boolean {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"file":"functiontostring.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/integrations/functiontostring.ts"],"sourcesContent":["import type { Client, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../currentScopes';\nimport { defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n"],"names":[],"mappings":";;;;;;;;;AAKA,IAAI,wBAAwB;AAE5B,MAAM,gBAAA,GAAmB,kBAAkB;AAE3C,MAAM,aAAc,GAAE,IAAI,OAAO,EAAmB;AAEpD,MAAM,4BAA6B,GAAG,MAAM;IAC1C,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAG;YAChB,6DAAA;YACM,2BAA2B,QAAQ,CAAC,SAAS,CAAC,QAAQ;YAE5D,+EAAA;YACA,wGAAA;YACM,IAAI;gBACV,8DAAA;gBACQ,QAAQ,CAAC,SAAS,CAAC,QAAS,GAAE,SAAiC,GAAG,IAAI,EAAiB;oBACrF,MAAM,gBAAiB,sKAAE,sBAAA,AAAmB,EAAC,IAAI,CAAC;oBAClD,MAAM,OAAQ,GACZ,aAAa,CAAC,GAAG,CAAC,qLAAA,AAAS,EAAC,EAAa,IAAG,qBAAqB,SAAA,GAAY,gBAAA,GAAmB,IAAI;oBACtG,OAAO,wBAAwB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;gBAC9D,CAAS;YACT,EAAQ,OAAM,CAAA,EAAA;YACd,4CAAA;YACA;QACA,CAAK;QACD,KAAK,EAAC,MAAM,EAAE;YACZ,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;QACrC,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;;;;;;;;;CAUA,SACa,2BAA4B,0KAAE,oBAAA,AAAiB,EAAC,4BAA4B","ignoreList":[0]}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"file":"semanticAttributes.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/semanticAttributes.ts"],"sourcesContent":["/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * The id of the profile that this span occurred in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nexport const SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nexport const SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n/** TODO: Remove these once we update to latest semantic conventions */\nexport const SEMANTIC_ATTRIBUTE_HTTP_REQUEST_METHOD = 'http.request.method';\nexport const SEMANTIC_ATTRIBUTE_URL_FULL = 'url.full';\n"],"names":[],"mappings":"AAAA;;;;CAIA;;;;;;;;;;;;;;;;AACO,MAAM,gCAAiC,GAAE;AAEhD;;CAEA,GACO,MAAM,qCAAsC,GAAE;AAErD;;CAEA,GACO,MAAM,4BAA6B,GAAE;AAE5C;;CAEA,GACO,MAAM,gCAAiC,GAAE;AAEhD,0CAAA,GACO,MAAM,iDAAkD,GAAE;AAEjE,oEAAA,GACO,MAAM,0CAA2C,GAAE;AAE1D,qEAAA,GACO,MAAM,2CAA4C,GAAE;AAE3D;;CAEA,GACO,MAAM,6BAA8B,GAAE;AAEtC,MAAM,iCAAkC,GAAE;AAE1C,MAAM,4BAA6B,GAAE;AAErC,MAAM,4BAA6B,GAAE;AAErC,MAAM,kCAAmC,GAAE;AAElD,qEAAA,GACO,MAAM,sCAAuC,GAAE;AAC/C,MAAM,2BAA4B,GAAE","ignoreList":[0]}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1528, "column": 0}, "map": {"version":3,"file":"metric-summary.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/metrics/metric-summary.ts"],"sourcesContent":["import type { MeasurementUnit, Span } from '@sentry/types';\nimport type { MetricSummary } from '@sentry/types';\nimport type { Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\ntype MetricSummaryStorage = Map<string, [string, MetricSummary]>;\n\nconst METRICS_SPAN_FIELD = '_sentryMetrics';\n\ntype SpanWithPotentialMetrics = Span & {\n  [METRICS_SPAN_FIELD]?: MetricSummaryStorage;\n};\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nexport function getMetricSummaryJsonForSpan(span: Span): Record<string, Array<MetricSummary>> | undefined {\n  const storage = (span as SpanWithPotentialMetrics)[METRICS_SPAN_FIELD];\n\n  if (!storage) {\n    return undefined;\n  }\n  const output: Record<string, Array<MetricSummary>> = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    const arr = output[exportKey] || (output[exportKey] = []);\n    arr.push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on a span.\n */\nexport function updateMetricSummaryOnSpan(\n  span: Span,\n  metricType: MetricType,\n  sanitizedName: string,\n  value: number,\n  unit: MeasurementUnit,\n  tags: Record<string, Primitive>,\n  bucketKey: string,\n): void {\n  const existingStorage = (span as SpanWithPotentialMetrics)[METRICS_SPAN_FIELD];\n  const storage =\n    existingStorage ||\n    ((span as SpanWithPotentialMetrics)[METRICS_SPAN_FIELD] = new Map<string, [string, MetricSummary]>());\n\n  const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n  const bucketItem = storage.get(bucketKey);\n\n  if (bucketItem) {\n    const [, summary] = bucketItem;\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: Math.min(summary.min, value),\n        max: Math.max(summary.max, value),\n        count: (summary.count += 1),\n        sum: (summary.sum += value),\n        tags: summary.tags,\n      },\n    ]);\n  } else {\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: value,\n        max: value,\n        count: 1,\n        sum: value,\n        tags,\n      },\n    ]);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAMA;;;CAGA,GAGA,MAAM,kBAAA,GAAqB,gBAAgB;AAM3C;;CAEA,GACO,SAAS,2BAA2B,CAAC,IAAI,EAA0D;IACxG,MAAM,UAAU,AAAC,IAAA,CAAkC,kBAAkB,CAAC;IAEtE,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,SAAS;IACpB;IACE,MAAM,MAAM,GAAyC,CAAA,CAAE;IAEvD,KAAK,MAAM,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAE,IAAG,OAAO,CAAE;QAC9C,MAAM,GAAI,GAAE,MAAM,CAAC,SAAS,CAAE,IAAA,CAAI,MAAM,CAAC,SAAS,CAAA,GAAI,EAAE,CAAC;QACzD,GAAG,CAAC,IAAI,EAAC,sLAAA,AAAiB,EAAC,OAAO,CAAC,CAAC;IACxC;IAEE,OAAO,MAAM;AACf;AAEA;;CAEA,GACO,SAAS,yBAAyB,CACvC,IAAI,EACJ,UAAU,EACV,aAAa,EACb,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,SAAS;IAET,MAAM,kBAAkB,AAAC,IAAA,CAAkC,kBAAkB,CAAC;IAC9E,MAAM,OAAQ,GACZ,eAAgB,IACpB,CAAK,AAAC,IAAK,CAA6B,kBAAkB,CAAE,GAAE,IAAI,GAAG,EAAmC,CAAC;IAEvG,MAAM,SAAA,GAAY,CAAC,EAAA,UAAA,CAAA,CAAA,EAAA,aAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IACA,MAAA,UAAA,GAAA,OAAA,CAAA,GAAA,CAAA,SAAA,CAAA;IAEA,IAAA,UAAA,EAAA;QACA,MAAA,GAAA,OAAA,CAAA,GAAA,UAAA;QACA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA;YACA,SAAA;YACA;gBACA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA;gBACA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA;gBACA,KAAA,EAAA,OAAA,CAAA,KAAA,IAAA,CAAA,CAAA;gBACA,GAAA,EAAA,OAAA,CAAA,GAAA,IAAA,KAAA,CAAA;gBACA,IAAA,EAAA,OAAA,CAAA,IAAA;YACA,CAAA;SACA,CAAA;IACA,CAAA,MAAA;QACA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA;YACA,SAAA;YACA;gBACA,GAAA,EAAA,KAAA;gBACA,GAAA,EAAA,KAAA;gBACA,KAAA,EAAA,CAAA;gBACA,GAAA,EAAA,KAAA;gBACA,IAAA;YACA,CAAA;SACA,CAAA;IACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 1586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1592, "column": 0}, "map": {"version":3,"file":"spanstatus.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/tracing/spanstatus.ts"],"sourcesContent":["import type { Span, SpanStatus } from '@sentry/types';\n\nexport const SPAN_STATUS_UNSET = 0;\nexport const SPAN_STATUS_OK = 1;\nexport const SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatus {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEO,MAAM,iBAAkB,GAAE;AAC1B,MAAM,cAAe,GAAE;AACvB,MAAM,iBAAkB,GAAE;AAEjC;;;;;CAKA,GACA,sDAAA;AACO,SAAS,yBAAyB,CAAC,UAAU,EAAsB;IACxE,IAAI,UAAW,GAAE,OAAO,UAAA,IAAc,GAAG,EAAE;QACzC,OAAO;YAAE,IAAI,EAAE;QAAA,CAAgB;IACnC;IAEE,IAAI,UAAW,IAAG,OAAO,UAAA,GAAa,GAAG,EAAE;QACzC,OAAQ,UAAU;YAChB,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,iBAAA;gBAAA,CAAmB;YAChE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,mBAAA;gBAAA,CAAqB;YAClE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,WAAA;gBAAA,CAAa;YAC1D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,gBAAA;gBAAA,CAAkB;YAC/D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,qBAAA;gBAAA,CAAuB;YACpE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,oBAAA;gBAAA,CAAsB;YACnE,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,WAAA;gBAAA,CAAa;YAC1D;gBACE,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,kBAAA;gBAAA,CAAoB;QACvE;IACA;IAEE,IAAI,UAAW,IAAG,OAAO,UAAA,GAAa,GAAG,EAAE;QACzC,OAAQ,UAAU;YAChB,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,eAAA;gBAAA,CAAiB;YAC9D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,aAAA;gBAAA,CAAe;YAC5D,KAAK,GAAG;gBACN,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,mBAAA;gBAAA,CAAqB;YAClE;gBACE,OAAO;oBAAE,IAAI,EAAE,iBAAiB;oBAAE,OAAO,EAAE,gBAAA;gBAAA,CAAkB;QACrE;IACA;IAEE,OAAO;QAAE,IAAI,EAAE,iBAAiB;QAAE,OAAO,EAAE,eAAA;IAAA,CAAiB;AAC9D;AAEA;;;CAGA,GACO,SAAS,aAAa,CAAC,IAAI,EAAQ,UAAU,EAAgB;IAClE,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,UAAU,CAAC;IAE1D,MAAM,UAAW,GAAE,yBAAyB,CAAC,UAAU,CAAC;IACxD,IAAI,UAAU,CAAC,OAAQ,KAAI,eAAe,EAAE;QAC1C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IAC9B;AACA","ignoreList":[0]}},
    {"offset": {"line": 1699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1705, "column": 0}, "map": {"version":3,"file":"spanUtils.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/spanUtils.ts"],"sourcesContent":["import type {\n  MeasurementUnit,\n  Primitive,\n  Span,\n  SpanAttributes,\n  SpanJSON,\n  SpanOrigin,\n  SpanStatus,\n  SpanTimeInput,\n  TraceContext,\n} from '@sentry/types';\nimport {\n  addNonEnumerableProperty,\n  dropUndefinedKeys,\n  generateSentryTraceHeader,\n  timestampInSeconds,\n} from '@sentry/utils';\nimport { getAsyncContextStrategy } from '../asyncContext';\nimport { getMainCarrier } from '../carrier';\nimport { getCurrentScope } from '../currentScopes';\nimport { getMetricSummaryJsonForSpan, updateMetricSummaryOnSpan } from '../metrics/metric-summary';\nimport type { MetricType } from '../metrics/types';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '../semanticAttributes';\nimport type { SentrySpan } from '../tracing/sentrySpan';\nimport { SPAN_STATUS_OK, SPAN_STATUS_UNSET } from '../tracing/spanstatus';\nimport { _getSpanForScope } from './spanOnScope';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nexport function spanToTransactionTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n  });\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { parent_span_id } = spanToJSON(span);\n\n  return dropUndefinedKeys({ parent_span_id, span_id, trace_id });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input into a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  try {\n    const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n    // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n    if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n      const { attributes, startTime, name, endTime, parentSpanId, status } = span;\n\n      return dropUndefinedKeys({\n        span_id,\n        trace_id,\n        data: attributes,\n        description: name,\n        parent_span_id: parentSpanId,\n        start_timestamp: spanTimeInputToSeconds(startTime),\n        // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n        timestamp: spanTimeInputToSeconds(endTime) || undefined,\n        status: getStatusMessage(status),\n        op: attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP],\n        origin: attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n        _metrics_summary: getMetricSummaryJsonForSpan(span),\n      });\n    }\n\n    // Finally, at least we have `spanContext()`....\n    return {\n      span_id,\n      trace_id,\n    };\n  } catch {\n    return {};\n  }\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span: Span): span is OpenTelemetrySdkTraceBaseSpan {\n  const castSpan = span as OpenTelemetrySdkTraceBaseSpan;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\nexport interface OpenTelemetrySdkTraceBaseSpan extends Span {\n  attributes: SpanAttributes;\n  startTime: SpanTimeInput;\n  name: string;\n  status: SpanStatus;\n  endTime: SpanTimeInput;\n  parentSpanId?: string;\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span: Span): span is SentrySpan {\n  return typeof (span as SentrySpan).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nexport function getStatusMessage(status: SpanStatus | undefined): string | undefined {\n  if (!status || status.code === SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\ntype SpanWithPotentialChildren = Span & {\n  [CHILD_SPANS_FIELD]?: Set<Span>;\n  [ROOT_SPAN_FIELD]?: Span;\n};\n\n/**\n * Adds an opaque child span reference to a span.\n */\nexport function addChildSpanToSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  addNonEnumerableProperty(childSpan as SpanWithPotentialChildren, ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    addNonEnumerableProperty(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nexport function removeChildSpanFromSpan(span: SpanWithPotentialChildren, childSpan: Span): void {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nexport function getSpanDescendants(span: SpanWithPotentialChildren): Span[] {\n  const resultSet = new Set<Span>();\n\n  function addSpanChildren(span: SpanWithPotentialChildren): void {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nexport function getRootSpan(span: SpanWithPotentialChildren): Span {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  const carrier = getMainCarrier();\n  const acs = getAsyncContextStrategy(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return _getSpanForScope(getCurrentScope());\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nexport function updateMetricSummaryOnActiveSpan(\n  metricType: MetricType,\n  sanitizedName: string,\n  value: number,\n  unit: MeasurementUnit,\n  tags: Record<string, Primitive>,\n  bucketKey: string,\n): void {\n  const span = getActiveSpan();\n  if (span) {\n    updateMetricSummaryOnSpan(span, metricType, sanitizedName, value, unit, tags, bucketKey);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1936, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1942, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/constants.ts"],"sourcesContent":["export const DEFAULT_ENVIRONMENT = 'production';\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAoB,GAAE","ignoreList":[0]}},
    {"offset": {"line": 1948, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1954, "column": 0}, "map": {"version":3,"file":"hasTracingEnabled.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/hasTracingEnabled.ts"],"sourcesContent":["import type { Options } from '@sentry/types';\nimport { getClient } from '../currentScopes';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  // eslint-disable-next-line deprecation/deprecation\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n"],"names":[],"mappings":";;;;;AAGA,2DAAA;AAGA;;;;CAIA,GACO,SAAS,iBAAiB,CAC/B,YAAY;IAEZ,IAAI,OAAO,kBAAA,KAAuB,SAAU,IAAG,CAAC,kBAAkB,EAAE;QAClE,OAAO,KAAK;IAChB;IAEE,MAAM,MAAA,4KAAS,YAAA,AAAS,EAAE;IAC1B,MAAM,OAAA,GAAU,YAAA,IAAiB,MAAO,IAAG,MAAM,CAAC,UAAU,EAAE,CAAC;IACjE,mDAAA;IACE,OAAO,CAAC,CAAC,OAAQ,IAAA,CAAI,OAAO,CAAC,aAAc,IAAG,sBAAsB,OAAA,IAAW,eAAgB,IAAG,OAAO,CAAC;AAC5G","ignoreList":[0]}},
    {"offset": {"line": 1975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1981, "column": 0}, "map": {"version":3,"file":"dynamicSamplingContext.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/tracing/dynamicSamplingContext.ts"],"sourcesContent":["import type { Client, DynamicSamplingContext, Span } from '@sentry/types';\nimport {\n  addNonEnumerableProperty,\n  baggageHeaderToDynamicSamplingContext,\n  dropUndefinedKeys,\n  dynamicSamplingContextToSentryBaggageHeader,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient } from '../currentScopes';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { getRootSpan, spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\ntype SpanWithMaybeDsc = Span & {\n  [FROZEN_DSC_FIELD]?: Partial<DynamicSamplingContext> | undefined;\n};\n\n/**\n * Freeze the given DSC on the given span.\n */\nexport function freezeDscOnSpan(span: Span, dsc: Partial<DynamicSamplingContext>): void {\n  const spanWithMaybeDsc = span as SpanWithMaybeDsc;\n  addNonEnumerableProperty(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(trace_id: string, client: Client): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client);\n\n  const rootSpan = getRootSpan(span);\n\n  // For core implementation, we freeze the DSC onto the span as a non-enumerable property\n  const frozenDsc = (rootSpan as SpanWithMaybeDsc)[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return frozenDsc;\n  }\n\n  // For OpenTelemetry, we freeze the DSC on the trace state\n  const traceState = rootSpan.spanContext().traceState;\n  const traceStateDsc = traceState && traceState.get('sentry.dsc');\n\n  // If the span has a DSC, we want it to take precedence\n  const dscOnTraceState = traceStateDsc && baggageHeaderToDynamicSamplingContext(traceStateDsc);\n\n  if (dscOnTraceState) {\n    return dscOnTraceState;\n  }\n\n  // Else, we generate it from the span\n  const jsonSpan = spanToJSON(rootSpan);\n  const attributes = jsonSpan.data || {};\n  const maybeSampleRate = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  const name = jsonSpan.description;\n  if (source !== 'url' && name) {\n    dsc.transaction = name;\n  }\n\n  // How can we even land here with hasTracingEnabled() returning false?\n  // Otel creates a Non-recording span in Tracing Without Performance mode when handling incoming requests\n  // So we end up with an active span that is not sampled (neither positively nor negatively)\n  if (hasTracingEnabled()) {\n    dsc.sampled = String(spanIsSampled(rootSpan));\n  }\n\n  client.emit('createDsc', dsc, rootSpan);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nexport function spanToBaggageHeader(span: Span): string | undefined {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return dynamicSamplingContextToSentryBaggageHeader(dsc);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAcA;;;CAGA,GACA,MAAM,gBAAA,GAAmB,YAAY;AAMrC;;CAEA,GACO,SAAS,eAAe,CAAC,IAAI,EAAQ,GAAG,EAAyC;IACtF,MAAM,gBAAiB,GAAE,IAAK;sKAC9B,4BAAA,AAAwB,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,GAAG,CAAC;AACnE;AAEA;;;;CAIA,GACO,SAAS,mCAAmC,CAAC,QAAQ,EAAU,MAAM,EAAkC;IAC5G,MAAM,OAAQ,GAAE,MAAM,CAAC,UAAU,EAAE;IAEnC,MAAM,EAAE,SAAS,EAAE,UAAA,EAAa,GAAE,MAAM,CAAC,MAAM,EAAG,IAAG,CAAA,CAAE;IAEvD,MAAM,GAAA,sKAAM,oBAAA,AAAiB,EAAC;QAC5B,WAAW,EAAE,OAAO,CAAC,WAAA,qKAAe,sBAAmB;QACvD,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,UAAU;QACV,QAAQ;IACZ,CAAG,CAAE;IAEH,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC;IAE7B,OAAO,GAAG;AACZ;AAEA;;;;;;CAMA,GACO,SAAS,iCAAiC,CAAC,IAAI,EAAmD;IACvG,MAAM,MAAA,4KAAS,YAAA,AAAS,EAAE;IAC1B,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,CAAA,CAAE;IACb;IAEE,MAAM,GAAA,GAAM,mCAAmC,+KAAC,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,QAAS,IAAG,EAAE,EAAE,MAAM,CAAC;IAExF,MAAM,QAAS,IAAE,2LAAA,AAAW,EAAC,IAAI,CAAC;IAEpC,wFAAA;IACE,MAAM,YAAY,AAAC,QAAA,CAA8B,gBAAgB,CAAC;IAClE,IAAI,SAAS,EAAE;QACb,OAAO,SAAS;IACpB;IAEA,0DAAA;IACE,MAAM,aAAa,QAAQ,CAAC,WAAW,EAAE,CAAC,UAAU;IACpD,MAAM,aAAc,GAAE,UAAW,IAAG,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC;IAElE,uDAAA;IACE,MAAM,kBAAkB,aAAA,IAAiB,4MAAA,AAAqC,EAAC,aAAa,CAAC;IAE7F,IAAI,eAAe,EAAE;QACnB,OAAO,eAAe;IAC1B;IAEA,qCAAA;IACE,MAAM,QAAS,GAAE,2LAAA,AAAU,EAAC,QAAQ,CAAC;IACrC,MAAM,aAAa,QAAQ,CAAC,IAAK,IAAG,CAAA,CAAE;IACtC,MAAM,eAAgB,GAAE,UAAU,0KAAC,yCAAqC,CAAC;IAEzE,IAAI,eAAgB,IAAG,IAAI,EAAE;QAC3B,GAAG,CAAC,WAAY,GAAE,CAAC,EAAA,eAAA,CAAA,CAAA;IACA;IAEA,4GAAA;IACA,MAAA,MAAA,GAAA,UAAA,2KAAA,mCAAA,CAAA;IAEA,+DAAA;IACA,MAAA,IAAA,GAAA,QAAA,CAAA,WAAA;IACA,IAAA,MAAA,KAAA,KAAA,IAAA,IAAA,EAAA;QACA,GAAA,CAAA,WAAA,GAAA,IAAA;IACA;IAEA,sEAAA;IACA,wGAAA;IACA,2FAAA;IACA,KAAA,yMAAA,EAAA,GAAA;QACA,GAAA,CAAA,OAAA,GAAA,MAAA,+KAAA,gBAAA,EAAA,QAAA,CAAA,CAAA;IACA;IAEA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA,GAAA,EAAA,QAAA,CAAA;IAEA,OAAA,GAAA;AACA;AAEA;;CAEA,GACA,SAAA,mBAAA,CAAA,IAAA,EAAA;IACA,MAAA,GAAA,GAAA,iCAAA,CAAA,IAAA,CAAA;IACA,2KAAA,8CAAA,EAAA,GAAA,CAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2089, "column": 0}, "map": {"version":3,"file":"applyScopeDataToEvent.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/applyScopeDataToEvent.ts"],"sourcesContent":["import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan, spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = {\n    trace: spanToTraceContext(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = getRootSpan(span);\n  const transactionName = spanToJSON(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2267, "column": 0}, "map": {"version":3,"file":"eventProcessors.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/eventProcessors.ts"],"sourcesContent":["import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;AAKA;;CAEA,GACO,SAAS,qBAAqB,CACnC,UAAU,EACV,KAAK,EACL,IAAI,EACJ,KAAK,GAAW,CAAC;IAEjB,OAAO,uKAAI,eAAW,CAAe,CAAC,OAAO,EAAE,MAAM,KAAK;QACxD,MAAM,SAAU,GAAE,UAAU,CAAC,KAAK,CAAC;QACnC,IAAI,KAAA,KAAU,IAAA,IAAQ,OAAO,SAAA,KAAc,UAAU,EAAE;YACrD,OAAO,CAAC,KAAK,CAAC;QACpB,OAAW;YACL,MAAM,MAAO,GAAE,SAAS,CAAC;gBAAE,GAAG,KAAM;YAAA,CAAC,EAAE,IAAI,CAAE;kLAE7C,cAAA,IAAe,SAAS,CAAC,EAAA,IAAM,MAAA,KAAW,IAAA,mKAAQ,SAAM,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;YAE/G,mKAAI,aAAA,AAAU,EAAC,MAAM,CAAC,EAAE;gBACtB,KAAK,OACF,IAAI,EAAC,KAAA,GAAS,qBAAqB,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EACrF,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;YAC7B,OAAa;gBACL,KAAK,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,KAAM,GAAE,CAAC,EAC3D,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;YAC7B;QACA;IACA,CAAG,CAAC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"file":"prepareEvent.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/prepareEvent.ts"],"sourcesContent":["import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  dateTimestampInSeconds,\n  getFilenameToDebugIdMap,\n  normalize,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalScope } from '../currentScopes';\nimport { notifyEventProcessors } from '../eventProcessors';\nimport { Scope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: ScopeInterface,\n  client?: Client,\n  isolationScope?: ScopeInterface,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  if (client) {\n    client.emit('applyFrameMetadata', event);\n  }\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = getFilenameToDebugIdMap(stackParser);\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.entries(filenameDebugIdMap).forEach(([filename, debug_id]) => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id,\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: normalize(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(\n  scope: ScopeInterface | undefined,\n  captureContext: CaptureContext | undefined,\n): ScopeInterface | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"file":"exports.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/exports.ts"],"sourcesContent":["import type {\n  CaptureContext,\n  CheckIn,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Session,\n  SessionContext,\n  SeverityLevel,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { getClient, getCurrentScope, getIsolationScope, withIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | SeverityLevel): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentScope().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  return getCurrentScope().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): void {\n  getIsolationScope().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  getIsolationScope().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  getIsolationScope().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  getIsolationScope().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  getIsolationScope().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  getIsolationScope().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nexport function lastEventId(): string | undefined {\n  return getIsolationScope().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  return withIsolationScope(() => {\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      Promise.resolve(maybePromiseResult).then(\n        () => {\n          finishCheckIn('ok');\n        },\n        e => {\n          finishCheckIn('error');\n          throw e;\n        },\n      );\n    } else {\n      finishCheckIn('ok');\n    }\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/** If the SDK is initialized & enabled. */\nexport function isEnabled(): boolean {\n  const client = getClient();\n  return !!client && client.getOptions().enabled !== false && !!client.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  getIsolationScope().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2939, "column": 0}, "map": {"version":3,"file":"breadcrumbs.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/breadcrumbs.ts"],"sourcesContent":["import type { Breadcrumb, BreadcrumbHint } from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds } from '@sentry/utils';\nimport { getClient, getIsolationScope } from './currentScopes';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n"],"names":[],"mappings":";;;;;;;;AAIA;;;CAGA,GACA,MAAM,mBAAA,GAAsB,GAAG;AAE/B;;;;;CAKA,GACO,SAAS,aAAa,CAAC,UAAU,EAAc,IAAI,EAAyB;IACjF,MAAM,MAAA,4KAAS,YAAA,AAAS,EAAE;IAC1B,MAAM,cAAA,IAAiB,4LAAA,AAAiB,EAAE;IAE1C,IAAI,CAAC,MAAM,EAAE;IAEb,MAAM,EAAE,gBAAiB,GAAE,IAAI,EAAE,cAAA,GAAiB,mBAAA,EAAA,GAAwB,MAAM,CAAC,UAAU,EAAE;IAE7F,IAAI,cAAA,IAAkB,CAAC,EAAE;IAEzB,MAAM,SAAA,IAAY,yLAAA,AAAsB,EAAE;IAC1C,MAAM,mBAAmB;QAAE,SAAS;QAAE,GAAG,UAAA;IAAA,CAAY;IACrD,MAAM,kBAAkB,sLACnB,iBAAA,AAAc,EAAC,IAAM,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAE,GAChE,gBAAgB;IAEpB,IAAI,eAAA,KAAoB,IAAI,EAAE;IAE9B,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,eAAe,EAAE,IAAI,CAAC;IAC7D;IAEE,cAAc,CAAC,aAAa,CAAC,eAAe,EAAE,cAAc,CAAC;AAC/D","ignoreList":[0]}},
    {"offset": {"line": 2976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2982, "column": 0}, "map": {"version":3,"file":"dedupe.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/integrations/dedupe.ts"],"sourcesContent":["import type { Event, Exception, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getFramesFromEvent, logger } from '@sentry/utils';\nimport { defineIntegration } from '../integration';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Deduplication filter.\n */\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i]!;\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3129, "column": 0}, "map": {"version":3,"file":"sdkMetadata.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/sdkMetadata.ts"],"sourcesContent":["import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '@sentry/utils';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;;;;;;;;CAYA,GACO,SAAS,gBAAgB,CAAC,OAAO,EAAW,IAAI,EAAU,KAAA,GAAQ;IAAC,IAAI;CAAC,EAAE,SAAS,KAAK,EAAQ;IACrG,MAAM,WAAW,OAAO,CAAC,SAAU,IAAG,CAAA,CAAE;IAExC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;QACjB,QAAQ,CAAC,GAAA,GAAM;YACb,IAAI,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAA;YACA,QAAA,EAAA,KAAA,CAAA,GAAA,EAAA,IAAA,GAAA,CAAA;oBACA,IAAA,EAAA,CAAA,EAAA,MAAA,CAAA,SAAA,EAAA,IAAA,CAAA,CAAA;oBACA,OAAA,kKAAA,cAAA;gBACA,CAAA,CAAA,CAAA;YACA,OAAA,kKAAA,cAAA;QACA,CAAA;IACA;IAEA,OAAA,CAAA,SAAA,GAAA,QAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 3164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3170, "column": 0}, "map": {"version":3,"file":"sdk.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/sdk.ts"],"sourcesContent":["import type { Client, ClientOptions } from '@sentry/types';\nimport { consoleSandbox, logger } from '@sentry/utils';\nimport { getCurrentScope } from './currentScopes';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): Client {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nexport function setCurrentClient(client: Client): void {\n  getCurrentScope().setClient(client);\n}\n"],"names":[],"mappings":";;;;;;;;;;AAMA,wDAAA,GAGA;;;;;;CAMA,GACO,SAAS,WAAW,CACzB,WAAW,EACX,OAAO;IAEP,IAAI,OAAO,CAAC,KAAM,KAAI,IAAI,EAAE;QAC1B,0KAAI,cAAW,EAAE;0KACf,UAAM,CAAC,MAAM,EAAE;QACrB,OAAW;YACX,kHAAA;+KACM,iBAAA,AAAc,EAAC,MAAM;gBAC3B,sCAAA;gBACQ,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC;YACpG,CAAO,CAAC;QACR;IACA;IACE,MAAM,KAAA,4KAAQ,kBAAA,AAAe,EAAE;IAC/B,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;IAElC,MAAM,MAAO,GAAE,IAAI,WAAW,CAAC,OAAO,CAAC;IACvC,gBAAgB,CAAC,MAAM,CAAC;IACxB,MAAM,CAAC,IAAI,EAAE;IACb,OAAO,MAAM;AACf;AAEA;;CAEA,GACO,SAAS,gBAAgB,CAAC,MAAM,EAAgB;6KACrD,kBAAA,AAAe,EAAE,EAAC,SAAS,CAAC,MAAM,CAAC;AACrC","ignoreList":[0]}},
    {"offset": {"line": 3212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3218, "column": 0}, "map": {"version":3,"file":"api.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/api.ts"],"sourcesContent":["import type { DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn: DsnComponents, tunnel?: string, sdkInfo?: SdkInfo): string {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n"],"names":[],"mappings":";;;;;;;AAGA,MAAM,kBAAA,GAAqB,GAAG;AAE9B,oEAAA,GACA,SAAS,kBAAkB,CAAC,GAAG,EAAyB;IACtD,MAAM,WAAW,GAAG,CAAC,QAAS,GAAE,CAAC,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EAAA;IACA,MAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,CAAA,CAAA,EAAA,GAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA;IACA,OAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,IAAA,GAAA,CAAA,CAAA,EAAA,GAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA;AACA;AAEA,gDAAA,GACA,SAAA,kBAAA,CAAA,GAAA,EAAA;IACA,OAAA,CAAA,EAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,EAAA,GAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AACA;AAEA,+EAAA,GACA,SAAA,YAAA,CAAA,GAAA,EAAA,OAAA,EAAA;IACA,OAAA,+KAAA,EAAA;QACA,4DAAA;QACA,8DAAA;QACA,UAAA,EAAA,GAAA,CAAA,SAAA;QACA,cAAA,EAAA,kBAAA;QACA,GAAA,OAAA,IAAA;YAAA,aAAA,EAAA,CAAA,EAAA,OAAA,CAAA,IAAA,CAAA,CAAA,EAAA,OAAA,CAAA,OAAA,CAAA,CAAA;QAAA,CAAA,CAAA;IACA,CAAA,CAAA;AACA;AAEA;;;;CAIA,GACA,SAAA,qCAAA,CAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA;IACA,OAAA,MAAA,GAAA,MAAA,GAAA,CAAA,EAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA;AAEA,mDAAA,GACA,SAAA,uBAAA,CACA,OAAA,EACA,aAAA;IAMA,MAAA,GAAA,IAAA,yKAAA,EAAA,OAAA,CAAA;IACA,IAAA,CAAA,GAAA,EAAA;QACA,OAAA,EAAA;IACA;IAEA,MAAA,QAAA,GAAA,CAAA,EAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,iBAAA,CAAA;IAEA,IAAA,cAAA,GAAA,CAAA,IAAA,kKAAA,cAAA,EAAA,GAAA,CAAA,CAAA,CAAA;IACA,IAAA,MAAA,GAAA,IAAA,aAAA,CAAA;QACA,IAAA,GAAA,KAAA,KAAA,EAAA;YACA;QACA;QAEA,IAAA,GAAA,KAAA,SAAA,EAAA;YACA;QACA;QAEA,IAAA,GAAA,KAAA,MAAA,EAAA;YACA,MAAA,IAAA,GAAA,aAAA,CAAA,IAAA;YACA,IAAA,CAAA,IAAA,EAAA;gBACA;YACA;YACA,IAAA,IAAA,CAAA,IAAA,EAAA;gBACA,cAAA,IAAA,CAAA,MAAA,EAAA,kBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;YACA;YACA,IAAA,IAAA,CAAA,KAAA,EAAA;gBACA,cAAA,IAAA,CAAA,OAAA,EAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;YACA;QACA,CAAA,MAAA;YACA,cAAA,IAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA;QACA;IACA;IAEA,OAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 3285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3291, "column": 0}, "map": {"version":3,"file":"envelope.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/envelope.ts"],"sourcesContent":["import type {\n  Client,\n  DsnComponents,\n  DynamicSamplingContext,\n  Event,\n  EventEnvelope,\n  EventItem,\n  SdkInfo,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  SessionEnvelope,\n  SessionItem,\n  SpanEnvelope,\n  SpanItem,\n  SpanJSON,\n} from '@sentry/types';\nimport {\n  createEnvelope,\n  createEventEnvelopeHeaders,\n  dsnToString,\n  getSdkMetadataForEnvelopeHeader,\n} from '@sentry/utils';\nimport { createSpanEnvelopeItem } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from './tracing/dynamicSamplingContext';\nimport type { SentrySpan } from './tracing/sentrySpan';\nimport { spanToJSON } from './utils/spanUtils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): SessionEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem: SessionItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nexport function createEventEnvelope(\n  event: Event,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjust a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem: EventItem = [{ type: eventType }, event];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nexport function createSpanEnvelope(spans: [SentrySpan, ...SentrySpan[]], client?: Client): SpanEnvelope {\n  function dscHasRequiredProps(dsc: Partial<DynamicSamplingContext>): dsc is DynamicSamplingContext {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = getDynamicSamplingContextFromSpan(spans[0]);\n\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span: SentrySpan) => beforeSendSpan(spanToJSON(span) as SpanJSON)\n    : (span: SentrySpan) => spanToJSON(span);\n\n  const items: SpanItem[] = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push(createSpanEnvelopeItem(spanJson));\n    }\n  }\n\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3419, "column": 0}, "map": {"version":3,"file":"parseSampleRate.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/utils/parseSampleRate.ts"],"sourcesContent":["import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return undefined;\n  }\n\n  return rate;\n}\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;;CAMA,GACO,SAAS,eAAe,CAAC,UAAU,EAA+B;IACvE,IAAI,OAAO,UAAW,KAAI,SAAS,EAAE;QACnC,OAAO,MAAM,CAAC,UAAU,CAAC;IAC7B;IAEE,MAAM,IAAA,GAAO,OAAO,UAAW,KAAI,QAAS,GAAE,UAAU,CAAC,UAAU,CAAA,GAAI,UAAU;IACjF,IAAI,OAAO,SAAS,QAAA,IAAY,KAAK,CAAC,IAAI,CAAE,IAAG,OAAO,CAAA,IAAK,IAAK,GAAE,CAAC,EAAE;6KACnE,eAAY,mKACV,SAAM,CAAC,IAAI,CACT,CAAC,uGAAuG,EAAE,IAAI,CAAC,SAAS,CACtH,UAAU,EACV,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QAErD,OAAO,SAAS;IACpB;IAEE,OAAO,IAAI;AACb","ignoreList":[0]}},
    {"offset": {"line": 3445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3451, "column": 0}, "map": {"version":3,"file":"baseclient.js","sources":["file:///Users/jornlarsen/Desktop/vincere/node_modules/%40sentry/core/src/baseclient.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  SeverityLevel,\n  Span,\n  SpanAttributes,\n  SpanContextData,\n  SpanJSON,\n  StartSpanOptions,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  createClientReportEnvelope,\n  dropUndefinedKeys,\n  dsnToString,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n  uuid4,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { getIsolationScope } from './currentScopes';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { parseSampleRate } from './utils/parseSampleRate';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    level?: SeverityLevel,\n    hint?: EventHint,\n    currentScope?: Scope,\n  ): string {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, currentScope?: Scope): string {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (\n      this._isEnabled() ||\n      // Force integrations to be setup even if no DSN was set when we have\n      // Spotlight enabled. This is particularly important for browser as we\n      // don't support the `spotlight` option there and rely on the users\n      // adding the `spotlightBrowserIntegration()` to their integrations which\n      // wouldn't get initialized with the check below when there's no DSN set.\n      this._options.integrations.some(({ name }) => name.startsWith('Spotlight'))\n    ) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'spanStart', callback: (span: Span) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'spanEnd', callback: (span: Span) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'idleSpanEnableAutoFinish', callback: (span: Span) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): () => void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse) => void,\n  ): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext, rootSpan?: Span) => void): () => void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): () => void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSampling',\n    callback: (\n      samplingData: {\n        spanAttributes: SpanAttributes;\n        spanName: string;\n        parentSampled?: boolean;\n        parentContext?: SpanContextData;\n      },\n      samplingDecision: { decision: boolean },\n    ) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'startPageLoadSpan',\n    callback: (\n      options: StartSpanOptions,\n      traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n    ) => void,\n  ): () => void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): () => void;\n\n  public on(hook: 'flush', callback: () => void): () => void;\n\n  public on(hook: 'close', callback: () => void): () => void;\n\n  public on(hook: 'applyFrameMetadata', callback: (event: Event) => void): () => void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): () => void {\n    const hooks = (this._hooks[hook] = this._hooks[hook] || []);\n\n    // @ts-expect-error We assume the types are correct\n    hooks.push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      // @ts-expect-error We assume the types are correct\n      const cbIndex = hooks.indexOf(callback);\n      if (cbIndex > -1) {\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** @inheritdoc */\n  public emit(\n    hook: 'beforeSampling',\n    samplingData: {\n      spanAttributes: SpanAttributes;\n      spanName: string;\n      parentSampled?: boolean;\n      parentContext?: SpanContextData;\n    },\n    samplingDecision: { decision: boolean },\n  ): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'spanStart', span: Span): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'spanEnd', span: Span): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'idleSpanEnableAutoFinish', span: Span): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext, rootSpan?: Span): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(\n    hook: 'startPageLoadSpan',\n    options: StartSpanOptions,\n    traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n  ): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'flush'): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'close'): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'applyFrameMetadata', event: Event): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  public sendEnvelope(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending envelope:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(currentScope ? currentScope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: dropUndefinedKeys({\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          }),\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, currentScope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  protected _flushOutcomes(): void {\n    DEBUG_BUILD && logger.log('Flushing outcomes...');\n\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    _level?: SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client: Client,\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans: SpanJSON[] = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        } else {\n          client.recordDroppedEvent('before_send', 'span');\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      if (event.spans) {\n        // We store the # of spans before processing in SDK metadata,\n        // so we can compare it afterwards to determine how many spans were dropped\n        const spanCountBefore = event.spans.length;\n        event.sdkProcessingMetadata = {\n          ...event.sdkProcessingMetadata,\n          spanCountBeforeProcessing: spanCountBefore,\n        };\n      }\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}